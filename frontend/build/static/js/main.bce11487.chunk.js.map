{"version":3,"sources":["pages/chat.js","components/activeUsers.js","components/messages.js","pages/join.js","App.js","index.js"],"names":["socket","ActiveUsers","className","id","this","props","users","map","user","index","Component","Messages","messages","filter","message","room","url","from","href","rel","target","createdDate","text","initialState","newMsg","fetchingLocation","Chat","state","param","match","params","emit","setState","scopeThis","name","io","err","history","push","on","formattedTime","moment","format","results","msgArr","length","scrollToBottom","console","log","listHeight","document","querySelector","messagesList","newMessage","messagesWrapperHeight","clientHeight","scrollTop","scrollHeight","offsetHeight","previousSibling","scrollTo","e","value","preventDefault","obj","data","clearForm","navigator","geolocation","alert","getCurrentPosition","pos","lat","coords","latitude","lon","longitude","loading","bgColor","spinnerColor","textColor","Link","to","onSubmit","placeholder","autoComplete","onChange","inputUpdate","bind","type","icon","faPaperPlane","onClick","sendLocation","faCompass","withRouter","Join","join","App","site_loaded","classNames","Switch","Route","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bce11487.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport ActiveUsers from './../components/activeUsers';\r\nimport Messages from './../components/messages';\r\nimport moment from 'moment';\r\nimport LoadingScreen from 'react-loading-screen';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCompass, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nvar socket;\r\nconst initialState = {\r\n    users: [],\r\n    messages: [],\r\n    newMsg: '',\r\n    fetchingLocation: false\r\n}\r\n\r\nclass Chat extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...initialState\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const param = {\r\n            room: this.props.match.params.room\r\n        }\r\n        socket.emit('leave', param);\r\n        this.setState({ ...initialState });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const scopeThis = this;\r\n        const params = {\r\n            name: this.props.match.params.name,\r\n            room: this.props.match.params.room\r\n        }\r\n\r\n        //socket = io('http://localhost:8080')\r\n        socket = io('/')\r\n\r\n        socket.emit('join', params, function (err) {\r\n            if (err) {\r\n                this.props.history.push('/');\r\n            }\r\n        });\r\n\r\n        socket.on('updateUserList', function (users) {\r\n            scopeThis.setState({\r\n                users\r\n            });\r\n        });\r\n\r\n        socket.on('newMessage', (message) => {\r\n            var formattedTime = moment(message.createdDate).format('h:mm a');\r\n            let newMsg = {\r\n                text: message.text,\r\n                from: message.from,\r\n                room: message.room,\r\n                createdDate: formattedTime\r\n            }\r\n            let results = scopeThis.state.messages;\r\n            results.push(newMsg);\r\n            scopeThis.setState({\r\n                messages: results\r\n            });\r\n\r\n            var msgArr = scopeThis.state.messages.filter(message => message.room === this.props.match.params.room);\r\n            if (msgArr.length > 3) {\r\n                scopeThis.scrollToBottom();\r\n            }\r\n        });\r\n\r\n        socket.on('createLocationMsg', (message) => {\r\n            var formattedTime = moment(message.createdDate).format('h:mm a');\r\n            let newMsg = {\r\n                url: message.url,\r\n                from: message.from,\r\n                room: message.room,\r\n                createdDate: formattedTime\r\n            }\r\n            let results = scopeThis.state.messages;\r\n            results.push(newMsg);\r\n            scopeThis.setState({\r\n                messages: results,\r\n                fetchingLocation: false\r\n            });\r\n        });\r\n\r\n        socket.on('disconnect', function () {\r\n            console.log('Connection lost from server.');\r\n        });\r\n\r\n    }\r\n\r\n    scrollToBottom() {\r\n        // selectors\r\n        var listHeight = document.querySelector('.messages #list ul');\r\n        var messagesList = document.querySelector('.messages #list');\r\n        var newMessage = document.querySelector('.messages #list ul li:last-child');\r\n        // heights\r\n        var messagesWrapperHeight = listHeight.clientHeight;\r\n        var clientHeight = messagesList.clientHeight;\r\n        var scrollTop = messagesList.scrollTop;\r\n        var scrollHeight = messagesList.scrollHeight;\r\n        var newMessageHeight = newMessage.offsetHeight;\r\n        var lastMessageHeight = newMessage.previousSibling.offsetHeight;\r\n\r\n        if (clientHeight + scrollTop + newMessageHeight + lastMessageHeight >= scrollHeight) {\r\n            document.querySelector('#list').scrollTo(0, messagesWrapperHeight)\r\n        }\r\n\r\n    }\r\n\r\n    clearForm() {\r\n        this.setState({\r\n            newMsg: ''\r\n        });\r\n    }\r\n\r\n    inputUpdate(e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    newMessage(e) {\r\n        e.preventDefault()\r\n        var obj = {\r\n            'text': this.state.newMsg\r\n        };\r\n        socket.emit('createMessage', obj, function (data) { });\r\n        this.clearForm();\r\n    }\r\n\r\n    sendLocation() {\r\n        this.setState({\r\n            fetchingLocation: true\r\n        });\r\n        if (!navigator.geolocation) {\r\n            return alert('GeoLocation not supported by your browser');\r\n        }\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n            socket.emit('createLocationMsg', {\r\n                lat: pos.coords.latitude,\r\n                lon: pos.coords.longitude\r\n            });\r\n        }, () => {\r\n            alert('Unable to fetch location');\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { newMsg } = this.state;\r\n\r\n        return (\r\n            <div className=\"chatPage\">\r\n\r\n                <LoadingScreen\r\n                    loading={this.state.fetchingLocation}\r\n                    bgColor='#F5F7F4'\r\n                    spinnerColor='#3597DE'\r\n                    textColor='#010000'\r\n                    text='Fetching your current location'\r\n                >\r\n                    <div className=\"hide\"></div>\r\n                </LoadingScreen>\r\n\r\n                <ActiveUsers users={this.state.users} />\r\n\r\n                <div className=\"messages_wrap\">\r\n\r\n                    <h1>\r\n                        <Link to=\"/\">\r\n                            <i className=\"fas fa-chevron-circle-left\"></i>\r\n                        </Link>\r\n                        {this.props.match.params.room}\r\n                    </h1>\r\n\r\n                    <Messages messages={this.state.messages} room={this.props.match.params.room} />\r\n\r\n                    <div className=\"newMsgForm\">\r\n                        <div className=\"wrap\">\r\n                            <form onSubmit={(e) => this.newMessage(e)}>\r\n\r\n                                <div className=\"form_wrap\">\r\n                                    <div className=\"form_row\">\r\n                                        <div className=\"form_item\">\r\n                                            <div className=\"form_input\">\r\n                                                <input name=\"newMsg\" placeholder=\"Type your message...\" autoComplete=\"off\" value={newMsg} onChange={this.inputUpdate.bind(this)} />\r\n                                                <span className=\"bottom_border\"></span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"btnWrap\">\r\n                                    <button type=\"submit\" className=\"btn\">\r\n                                        <FontAwesomeIcon icon={faPaperPlane}></FontAwesomeIcon>\r\n                                    </button>\r\n                                    <button id=\"send_location\" className=\"btn\" onClick={() => this.sendLocation()}>\r\n                                        <FontAwesomeIcon icon={faCompass}></FontAwesomeIcon>\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Chat);","import React, { Component } from 'react';\n\nclass ActiveUsers extends Component {\n    render() {\n        return (\n            <div className=\"activeUsers\">\n                <h2 className=\"headline\">\n                    Active users\n                </h2>\n                <div id=\"users\">\n                    <ul>\n                        {this.props.users.map((user, index) => (\n                            <li key={index}>\n                                <i className=\"fas fa-circle\"></i>\n                                <span>\n                                    {user}\n                                </span>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default ActiveUsers;","import React, { Component } from 'react';\n\nclass Messages extends Component {\n    render() {\n        return (\n            <div className=\"messages\">\n                <div id=\"list\">\n                    <ul>\n                        {this.props.messages.filter(message => message.room === this.props.room).map((message, index) => (\n                            <li key={index}>\n\n                                {message.url &&\n                                    <div>\n                                        <div className=\"msg\">\n                                            <h4>{message.from}</h4>\n                                            <div className=\"body\">\n                                                <a href={message.url} rel=\"noopener noreferrer\" target=\"_blank\">My current location</a>\n                                            </div>\n                                        </div>\n                                        <span className=\"createdDate\">{message.createdDate}</span>\n                                    </div>\n                                }\n\n                                {!message.url &&\n                                    <div>\n                                        <div className=\"msg\">\n                                            <h4>{message.from}</h4>\n                                            <div className=\"body\">\n                                                <p>{message.text}</p>\n                                            </div>\n                                        </div>\n                                        <span className=\"createdDate\">{message.createdDate}</span>\n                                    </div>\n                                }\n\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    room: ''\r\n}\r\n\r\nclass Join extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            ...initialState\r\n        }\r\n    }\r\n\r\n    clearForm() {\r\n        this.setState({\r\n            ...initialState\r\n        });\r\n    }\r\n\r\n    inputUpdate(e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    join() {\r\n        const { name, room } = this.state;\r\n        if (name && room) {\r\n            this.props.history.push(`/chat/${name}/${room}`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { name } = this.state;\r\n\r\n        return (\r\n            <div className=\"joinForm\">\r\n\r\n                <div className=\"form_wrap\">\r\n                    <div className=\"form_row\">\r\n                        <div className=\"form_item\">\r\n                            <div className=\"form_input\">\r\n                                <input type=\"text\" placeholder=\"Full Name\" autoComplete=\"off\" name=\"name\" value={name} onChange={this.inputUpdate.bind(this)} />\r\n                                <span className=\"bottom_border\"></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form_row\">\r\n                        <div className=\"form_item\">\r\n                            <div className=\"form_select\">\r\n                                <select name=\"room\" onChange={this.inputUpdate.bind(this)}>\r\n                                    <option value=\"\">Please select a group</option>\r\n                                    <option value=\"React JS\">React JS</option>\r\n                                    <option value=\"Node JS\">Node JS</option>\r\n                                </select>\r\n                                <i className=\"fas fa-chevron-down\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form_buttons\">\r\n                        <button onClick={() => this.join()} className=\"btn\">\r\n                            Join\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Join);","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport './assets/scss/styles.scss';\r\n\r\nimport Chat from './pages/chat';\r\nimport Join from './pages/join';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      site_loaded: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      site_loaded: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classNames({'App': true, 'site_loaded': this.state.site_loaded})}>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/chat/:name/:room\" component={Chat} />\r\n            <Route path=\"/\" component={Join} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}